.navigation {
  &__checkbox {
    display: none;
  }

  // The button is defined with a height and width larger than the dimensions for background to ensure it covers it.
  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, 0.1);
    text-align: center;
    cursor: pointer;

    @include respond(tab-port) {
      top: 4rem;
      right: 4rem;
    }

    @include respond(phone) {
      top: 3rem;
      right: 3rem;
    }
  }

  /* The background starts as a small circle and after it is selcted, it expands to take up the entire screen. */
  /* The "fixed" position is similar to "absolute", but with the difference that the position does not change as the page scrolls.
      It is similar in that it also:
        takes the element out of the natural document flow
        allows specification of its position in relation to a positioned element (with the top/bottom/left/right properties) */
  /* radial-gradient([centercolor], [outercolor]) */
  /* z-index only works when the position is defined */
  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient(
      $color-primary-light,
      $color-primary-dark
    );
    z-index: 1000;
    transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
    -webkit-transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
    -moz-transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
    -ms-transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
    -o-transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);

    @include respond(tab-port) {
      top: 4.5rem;
      right: 4.5rem;
    }

    @include respond(phone) {
      top: 3rem;
      right: 3rem;
    }
  }

  /* If the width is not specified, it will automatically occupy 100% of the width because it is a block level element.
      Here, we want to hide the nav until selected, so we specify a width of 0. */
  &__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    //right: 0;
    left: 0;
    z-index: 1500;

    opacity: 0;
    width: 0;

    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    -webkit-transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    -moz-transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    -ms-transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    -o-transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  &__list {
    @include centerHorizontalVertical;
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  /* To make the color change effect for the links on hover:
      the background-color with the sharp linear-gradient was implemented
      the background-size was increased beyond the area of the link element so only the transparent is seen initially
      when the link element is hovered, the background position is shifted so only the white is seen */
  &__link {
    &:link,
    &:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(
        120deg,
        transparent 0%,
        transparent 50%,
        $color-white 50%
      );
      background-size: 220%;
      transition: all 0.4s;
      -webkit-transition: all 0.4s;
      -moz-transition: all 0.4s;
      -ms-transition: all 0.4s;
      -o-transition: all 0.4s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:hover,
    &:active {
      background-position: 100%;
      color: $color-primary;
      transform: translateX(1rem);
      -webkit-transform: translateX(1rem);
      -moz-transform: translateX(1rem);
      -ms-transform: translateX(1rem);
      -o-transform: translateX(1rem);
    }
  }

  // FUNCTIONALITY
  &__checkbox:checked ~ &__background {
    transform: scale(80);
    -webkit-transform: scale(80);
    -moz-transform: scale(80);
    -ms-transform: scale(80);
    -o-transform: scale(80);
  }

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }

  // ICON
  &__icon {
    position: relative;
    margin-top: 3.5rem;

    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all 0.2s;
      -webkit-transition: all 0.2s;
      -moz-transition: all 0.2s;
      -ms-transition: all 0.2s;
      -o-transition: all 0.2s;
    }

    &::before {
      top: -0.8rem;
    }

    &::after {
      top: 0.8rem;
    }
  }

  &__button:hover &__icon::before {
    top: -1rem;
  }

  &__button:hover &__icon::after {
    top: 1rem;
  }

  /* Changing the opacity instead of the background-color does not yield the same result.
      Updating the opacity impacts the entire element as a whole; including its contents and children.
      In this case, the whole icon would be updated to the same opacity. */
  &__checkbox:checked + &__button &__icon {
    background-color: transparent;
  }

  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg);
    -webkit-transform: rotate(135deg);
    -moz-transform: rotate(135deg);
    -ms-transform: rotate(135deg);
    -o-transform: rotate(135deg);
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);
    -moz-transform: rotate(-135deg);
    -ms-transform: rotate(-135deg);
    -o-transform: rotate(-135deg);
  }
}
